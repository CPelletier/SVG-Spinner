// Generated by CoffeeScript 1.4.0

/*
Spinning loader svg generator script
by Robert Fleischmann
*/


(function() {
  var addDot, i, options, out, params, _i, _ref;

  params = process.argv.splice(2).map(function(arg) {
    return parseFloat(arg);
  });

  options = {
    dots: parseInt(params[0] || 12, 10),
    dotSize: params[1] || 2,
    radius: params[2] || 10,
    duration: params[3] || 1.2,
    minOpacity: params[4] || 0,
    maxOpacity: params[5] || 1
  };

  addDot = function(i) {
    var xPos, yPos;
    xPos = options.radius * (1 + Math.cos(2 * Math.PI * i / options.dots - Math.PI / 2)) + options.dotSize;
    xPos = Math.round(xPos * 10000) / 10000;
    yPos = options.radius * (1 + Math.sin(2 * Math.PI * i / options.dots - Math.PI / 2)) + options.dotSize;
    yPos = Math.round(yPos * 10000) / 10000;
    if (options.duration > 0) {
      return "<circle cx='" + xPos + "' cy='" + yPos + "' r='" + options.dotSize + "' style='opacity:" + options.minOpacity + ";'>\n  <animate attributeType='CSS' attributeName='opacity' from='" + options.maxOpacity + "' to='" + options.minOpacity + "' dur='" + options.duration + "s' repeatCount='indefinite' begin='" + (Math.round(options.duration * i * 10000 / options.dots) / 10000) + "s' \/>\n</circle>\n";
    } else {
      return "<circle cx='" + xPos + "' cy='" + yPos + "' r='" + options.dotSize + "'/>\n";
    }
  };

  out = "<?xml version='1.0' standalone='no'?>\n<!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'>\n<!-- Generated with svg-spin generator script from Robert Fleischmann (http://github.com/rendro/SVG-Spinner) -->\n<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='" + ((options.dotSize + options.radius) * 2) + "px' height='" + ((options.dotSize + options.radius) * 2) + "px'>\n  <g>\n";

  for (i = _i = 0, _ref = options.dots; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
    out += addDot(i);
  }

  out += "  </g>\n</svg>";

  console.log(out);

}).call(this);
